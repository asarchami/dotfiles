# ===================================================================
# ===                       CORE SETTINGS                         ===
# ===================================================================

# Set zsh as the default shell
set -g default-shell /bin/zsh

# Use 256-color terminal
set -g default-terminal "tmux-256color"

# Increase history limit
set -g history-limit 20000

# Set buffer limit
set -g buffer-limit 20

# Start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

# Reduce escape time for faster responsiveness
set -s escape-time 0

# Don't automatically rename windows
setw -g allow-rename off
setw -g automatic-rename off

# Set terminal window title
set -g set-titles on
set -g set-titles-string "#I:#W"

# Update the DISPLAY environment variable
set-option -g update-environment "DISPLAY"

# ===================================================================
# ===                        KEYBINDINGS                          ===
# ===================================================================

# Set prefix to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# --- Config & Session Management ---
# Reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Kill panes, windows, and sessions
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Detach clients
bind d detach
bind D if -F '#{session_many_attached}' \
       'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
       'display "Session has only 1 client attached"'

# --- Window Management ---
# Split panes with | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Navigate windows with h and l
bind H previous-window
bind L next-window

# Move (swap) windows
bind C-l swap-window -t +1\; select-window -t +1
bind C-h swap-window -t -1\; select-window -t -1
bind -n C-k swap-window -t -1\; select-window -t -1
bind -n C-j swap-window -t +1\; select-window -t +1

# Rename windows and sessions
bind n command-prompt -I "#{window_name}" "rename-window '%%'"
bind N command-prompt -I "#{session_name}" "rename-session '%%'"

# Link window
bind w command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# --- Pane Management ---
# Navigate panes with vim-style keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes
bind i resize-pane -U 5
bind u resize-pane -D 5
bind y resize-pane -L 5
bind o resize-pane -R 5

# Zoom pane
bind + resize-pane -Z

# Rotate panes in the current window
bind -r . rotate-window -U
bind -r , rotate-window -D

# ===================================================================
# ===                        COPY MODE                            ===
# ===================================================================
# Use vi-style keys in copy mode
setw -g mode-keys vi

# Allow tmux to access the system clipboard (works over SSH)
set-option -s set-clipboard on

# Enter copy mode
bind v copy-mode

# Start selection with 'v'
bind -T copy-mode-vi v send-keys -X begin-selection

# Copy selection to system clipboard with 'y'
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel
if-shell "uname | grep -q Darwin" {
    set-option -s copy-command 'pbcopy'
} {
    if-shell "test "$XDG_SESSION_TYPE" = "wayland"" {
        set-option -s copy-command 'wl-copy'
    } {
        set-option -s set-clipboard external
        set-option -s copy-command 'xclip -i -selection clipboard'
    }
}

bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel

# Paste from tmux buffer
bind P paste-buffer

# ===================================================================
# ===                    THEMING & STATUS BAR                     ===
# ===================================================================

# Set status bar position to the top
set-option -g status-position top
set -g status-interval 2

# --- Conditional Colors (Local vs SSH) ---
%if #{==:#{SSH_CLIENT},}
# Colors for remote session
color1=colour237; color2=colour237; color3=colour7; color4=colour167; color5=colour223; color6=colour214; color7=colour0; color8=colour12; color9=colour240; color10=colour234; color11=colour255; color12=colour243; color13=colour254; color14=colour248; color15=colour239; color16=colour109; color17=colour235; color18=colour124; color19=colour222; color20=colour0
%else
# Colors for local session
color1=colour23; color2=colour43; color3=colour16; color4=colour167; color5=colour0; color6=colour23; color7=colour23; color8=colour12; color9=colour240; color10=colour39; color11=colour255; color12=colour114; color13=colour23; color14=colour248; color15=colour15; color16=colour109; color17=colour235; color18=colour124; color19=colour222; color20=colour0
%endif

# --- UI Element Colors ---
set-option -g status-style "bg=$color1,fg=$color5"
set-option -g pane-active-border-style "fg=$color6"
set-option -g pane-border-style "fg=$color15"
set-option -g message-style "bg=$color15,fg=$color5"
set-option -g message-command-style "bg=$color15,fg=$color5"
set-option -g display-panes-active-colour "colour1"
set-option -g display-panes-colour "$color1"
set-window-option -g clock-mode-colour "$color16"

# --- Window Status Colors ---
set-window-option -g window-status-style "bg=$color6,fg=$color1"
set-window-option -g window-status-activity-style "bg=$color1,fg=$color14"
set-window-option -g window-status-current-style "bg=$color18,fg=$color1"
set-window-option -g window-status-bell-style "bg=$color19,fg=$color17"

# --- Status Bar Content ---
set -g status-left-length 150
set -g status-right-length 30

set-option -g status-left "#[fg=$color3, bg=$color2]#{?client_prefix,#[bg=$color4],} ÔÑà #H #S #[fg=$color2, bg=$color1]#{?client_prefix,#[fg=$color4],}ÓÇ∞#{?window_zoomed_flag, üîç,}"
set-option -g status-right "#[fg=$color6, bg=$color1] ÓÇ≤#[fg=$color7, bg=$color6] ÔÑ≥  %b %d %Y #[fg=$color8,bg=$color6]ÓÇ≤#[fg=$color20,bg=$color8] ÔÄó  %H:%M "

set-window-option -g window-status-current-format "#[fg=$color1, bg=$color10]ÓÇ∞#[fg=$color11, bg=$color10, bold] #W #[fg=$color10, bg=$color1]ÓÇ∞"
set-window-option -g window-status-format "#[fg=$color1,bg=$color12,noitalics]ÓÇ∞#[fg=$color13, bg=$color12] #W #[fg=$color12, bg=$color1]ÓÇ∞"

# --- F12 Distraction-Free Mode ---
bind -T root F12 \
       set prefix None \;\
       set key-table off \;\
       set window-status-current-format "#[fg=$color1,bg=$color12,noitalics]ÓÇ∞#[fg=colour236, bg=$color12, bold] #W #[fg=$color12, bg=$color1]ÓÇ∞" \;\
       if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
       refresh-client -S

bind -T off F12 \
       set -u prefix \;\
       set -u key-table \;\
       set -u status-style \;\
       set -u window-status-current-style \;\
       set -u window-status-current-format \;\
       refresh-client -S

# ===================================================================
# ===                         PLUGINS                             ===
# ===================================================================

# --- Tmux Plugin Manager (TPM) ---
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Resurrect settings
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'

# Initialize TPM (must be the last line in the file)
run '~/.config/tmux/plugins/tpm/tpm'



